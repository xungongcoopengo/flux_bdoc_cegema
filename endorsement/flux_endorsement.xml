<?xml version="1.0" encoding="UTF-8"?>
<FLUX xmlns:py="http://genshi.edgewall.org/">
<?python
    import datetime
    from trytond.config import config
    from trytond.pool import Pool
    from trytond.server_context import ServerContext
    env = config.get('bdoc', 'env_name')
    code = Pool().get('report.template')(id=data['doc_template'][0])
    is_batch = 'BATCH' if ServerContext().get('from_batch', None) else 'WEB'
?>
<py:for each="object in objects">
    <?python
        contract = object
        subscriber = contract.subscriber
        subscriber_address = None
        if subscriber.main_address:
            subscriber_address = subscriber.main_address
        elif subscriber.addresses[0]:
            subscriber_address = subscriber.addresses[0]
        covered_elements = contract.covered_elements
        loans = contract.used_loans
        options = contract.covered_element_options
        shares = contract.shares_per_loan

        premiums = contract.get_future_invoices(contract.id)
        current_premium_start = premiums[0]['start']
        months_of_current_year = 0
        remain_capital = 0
        amount_dc_ptia = 0
        amount_ipp_ipt_itt = 0
        optional_amount = 0
        amount_year = 0
        total_amount_dc_ptia = 0
        total_amount_ipp_ipt_itt = 0
        total_amount_fee = 0
        total_amount_optionals = 0
        dc_ptia = ['death', 'total_autonomy_loss']
        ipp_ipt_itt = ['partial_disability', 'total_disability', 'temporary_disability']
        results = []
        for idx, premium in enumerate(premiums):
            if premium['start'].year != current_premium_start.year or idx == len(premiums) - 1:
                months_current_year = premium['start'].month if idx == len(premiums) - 1 else 13 - current_premium_start.month
                results.append({'current_premium_start': current_premium_start,
                        'remain_capital': remain_capital,
                        'amount_dc_ptia': amount_dc_ptia,
                        'amount_ipp_ipt_itt': amount_ipp_ipt_itt,
                        'optional_amount': optional_amount,
                        'amount_year': amount_year,
                        'amount_month': round(amount_year / months_current_year, 2),
                        })
                remain_capital = 0
                amount_dc_ptia = 0
                amount_ipp_ipt_itt = 0
                optional_amount = 0
                amount_year = 0
                current_premium_start = premium['start']
            for detail in premium['details']:
                if detail['premium'].option and detail['premium'].option.coverage:
                    if detail['premium'].option.coverage.insurance_kind in dc_ptia:
                        amount_dc_ptia += detail['total_amount']
                        total_amount_dc_ptia += detail['total_amount']
                    elif detail['premium'].option.coverage.insurance_kind in ipp_ipt_itt:
                        amount_ipp_ipt_itt += detail['total_amount']
                        total_amount_ipp_ipt_itt += detail['total_amount']
                    elif detail['premium'].option.coverage not in detail['premium'].option.coverage.options_required:
                        optional_amount += detail['total_amount']
                        total_amount_optionals += optional_amount
            amount_year += amount_dc_ptia + amount_ipp_ipt_itt
            months_of_current_year += 1
            total_amount_fee += premium['fee']
        total_amount_years = total_amount_dc_ptia + total_amount_ipp_ipt_itt
        total_months = (premiums[-1]['start'].year - premiums[0]['start'].year) * 12 + premiums[-1]['start'].month - premiums[0]['start'].month
        total_amount_month = round(total_amount_years / total_months, 2) 
        total_general = total_amount_years + total_amount_fee
?>
    <ROOT>
        <DOCUMENT>
            <TECHDATA>
                <MODELE>${len(results)}</MODELE>
                <STATUT_DOCUMENT>TEST</STATUT_DOCUMENT>
                <LISTE_CONTRATS>TEST</LISTE_CONTRATS>
                <NUM_CONTRAT>TEST</NUM_CONTRAT>
                <PERIMETRE>TEST</PERIMETRE>
                <STATUT_CONTRAT>TEST</STATUT_CONTRAT>
                <DATE_EFFET_CONTRAT>TEST</DATE_EFFET_CONTRAT>
                <LISTE_ADHERENT>TEST</LISTE_ADHERENT>
                <NUM_ADHERENT>TEST</NUM_ADHERENT>
                <RAISON_SOCIALE_ADHERENT>TEST</RAISON_SOCIALE_ADHERENT>
                <NOM_ADHERENT>TEST</NOM_ADHERENT>
                <PRENOM_ADHERENT>TEST</PRENOM_ADHERENT>
                <DATE_NAISSANCE_ADHERENT>TEST</DATE_NAISSANCE_ADHERENT>
                <LISTE_ASSURES>TEST</LISTE_ASSURES>
                <NUM_ASSURE>TEST</NUM_ASSURE>
                <NOM_ASSURE>TEST</NOM_ASSURE>
                <PRENOM_ASSURE>TEST</PRENOM_ASSURE>
                <DATE_NAISSANCE_ASSURE>TEST</DATE_NAISSANCE_ASSURE>
                <LISTE_APPORTEUR>TEST</LISTE_APPORTEUR>
                <NUM_APPORTEUR>TEST</NUM_APPORTEUR>
                <RAISON_SOCIALE_APPORTEUR>TEST</RAISON_SOCIALE_APPORTEUR>
                <NOM_CONTACT_APPORTEUR>TEST</NOM_CONTACT_APPORTEUR>
                <PRENOM_CONTACT_APPORTEUR>TEST</PRENOM_CONTACT_APPORTEUR>
                <NUM_PLI>TEST</NUM_PLI>
                <ORIGINE>TEST</ORIGINE>
                <GARANTIES>TEST</GARANTIES>
                <NUM_ACTE_GESTION>TEST</NUM_ACTE_GESTION>
                <DATE_NUMERISATION>TEST</DATE_NUMERISATION>
                <DATE_ENVOI>TEST</DATE_ENVOI>
                <OBJET_DISTRIBUTION>TEST</OBJET_DISTRIBUTION>
                <NOM_EXPEDITEUR>TEST</NOM_EXPEDITEUR>
                <PRENOM_EXPEDITEUR>TEST</PRENOM_EXPEDITEUR>
                <EMAIL_EXPEDITEUR>TEST</EMAIL_EXPEDITEUR>
                <NOM_DESTINATAIRE_PRINCIPAL>TEST</NOM_DESTINATAIRE_PRINCIPAL>
                <PRENOM_DESTINATAIRE_PRINCIPAL>TEST</PRENOM_DESTINATAIRE_PRINCIPAL>
                <EMAIL_DESTINATAIRE_PRINCIPAL>TEST</EMAIL_DESTINATAIRE_PRINCIPAL>
                <LISTE_DESTINATAIRE_COPIE>TEST</LISTE_DESTINATAIRE_COPIE>
                <NOM_DESTINATAIRE_COPIE>TEST</NOM_DESTINATAIRE_COPIE>
                <PRENOM_DESTINATAIRE_COPIE>TEST</PRENOM_DESTINATAIRE_COPIE>
                <EMAIL_DESTINATAIRE_COPIE>TEST</EMAIL_DESTINATAIRE_COPIE>
                <PARTENAIRE_TPA>TEST</PARTENAIRE_TPA>
                <NIVEAU_CONFIDENTIALITE>TEST</NIVEAU_CONFIDENTIALITE>
                <TYPE_ACTE_GESTION_ASSOCIE>TEST</TYPE_ACTE_GESTION_ASSOCIE>
                <LISTE_PRODUIT>TEST</LISTE_PRODUIT>
                <NOM_PRODUIT>TEST</NOM_PRODUIT>
                <MONTANTS_GARANTIES>TEST</MONTANTS_GARANTIES>
                <DOCUMENT_ENTRANT_SORTANT>TEST</DOCUMENT_ENTRANT_SORTANT>
                <RESEAU_DISTRIBUTION>TEST</RESEAU_DISTRIBUTION>
                <PRIORITE>TEST</PRIORITE>
                <DATE_RECEPTION>TEST</DATE_RECEPTION>
                <COURRIER_AR>TEST</COURRIER_AR>
                <VIP>TEST</VIP>
                <ETAT_DOSSIER>TEST</ETAT_DOSSIER>
                <MOTIF>TEST</MOTIF>
                <SOUS_MOTIF>TEST</SOUS_MOTIF>
                <ID_TYPE_DOC_COOG_ATTENDU>TEST</ID_TYPE_DOC_COOG_ATTENDU>
                <TYPE_DOC_COOG_ATTENDU>TEST</TYPE_DOC_COOG_ATTENDU>
                <STATUT_TYPE_DOC_COOG_ATTENDU>TEST</STATUT_TYPE_DOC_COOG_ATTENDU>
                <DATERECEPTION_TYPE_DOC_COOG_ATTENDU>TEST</DATERECEPTION_TYPE_DOC_COOG_ATTENDU>
                <TYPE_RENS_COMPLEMENTAIRE>TEST</TYPE_RENS_COMPLEMENTAIRE>
                <AFFICHAGE_COURTIER>TEST</AFFICHAGE_COURTIER>
                <AFFICHAGE_ASSURE>TEST</AFFICHAGE_ASSURE>
                <AFFICHAGE_GESTION>TEST</AFFICHAGE_GESTION>
                <TYPE_QUESTIONNAIRE>TEST</TYPE_QUESTIONNAIRE>
                <SIGNE_ELECTRONIQUEMENT>TEST</SIGNE_ELECTRONIQUEMENT>
                <ORIGINAL>TEST</ORIGINAL>
                <STREAM>TEST</STREAM>

                <!--Start elements not in EMPRUNTEUR_SPECIFICATION_FLOT-->
                <SOCIETE_CODE>A</SOCIETE_CODE>
                <CODE_LOGO>A</CODE_LOGO>
                <PAPIER_CODE>0</PAPIER_CODE>
                <PREIMPRIME>O</PREIMPRIME>
                <COM_ADH_EMAIL>O</COM_ADH_EMAIL>
                <EMAIL_ADH_TO>${subscriber.email}</EMAIL_ADH_TO>
                <EMAIL_ADH_FROM>moncontratsante@cegema.com</EMAIL_ADH_FROM>
                <EMAIL_ADH_SUBJECT>Swisslife - Devis assurance emprunteur</EMAIL_ADH_SUBJECT>
                <!--End elements not in EMPRUNTEUR_SPECIFICATION_FLOT-->
            </TECHDATA>
            <QR_CODE>
                <TYPE_DOCUMENT></TYPE_DOCUMENT>
                <NUM_CONTRAT></NUM_CONTRAT>
                <NUM_FORMALITE></NUM_FORMALITE>
            </QR_CODE>
            <GENERAL>
                <N_DOSSIER>${contract.contract_number}</N_DOSSIER>
                <NUM_ADHESION>${subscriber.get_identifier_value('number_adherent', subscriber.code)}</NUM_ADHESION>
                <NUM_ASSURE>${subscriber.code}</NUM_ASSURE>
                <TYPE_ADHESION>${'PARTICULIER' if subscriber.is_person else 'ENTREPRISE'}</TYPE_ADHESION>
                <DATE_EFFET_GARANTIES>${contract.initial_start_date.strftime('%d/%m/%Y')}</DATE_EFFET_GARANTIES>
            </GENERAL>
        
            <COURTIER>
                <NOM_COURTIER>${contract.broker.party.name}</NOM_COURTIER>
                <NUM_TELEPHONE>${contract.broker.party.phone}</NUM_TELEPHONE>
                <EMAIL>${contract.broker.party.email}</EMAIL>
                <CODE>${contract.broker.party.code}</CODE>
            </COURTIER>
        
            <PERSONNES_A_ASSURER>
            <py:for each="covered_element in covered_elements">
                <?python
                    party = covered_element.party if covered_element.party else None
                    address = None
                    if party:
                        if party.main_address:
                            address = party.main_address
                        elif party.addresses:
                            address = party.addresses[0]
                ?>
                <PERSONNE_A_ASSURER>
                    <CIVILITE>${party.gender_string if party else ''}</CIVILITE>
                    <NOM>${party.name if party else ''}</NOM>
                    <NOM_DE_NAISSANCE>${party.birth_name if party else ''}</NOM_DE_NAISSANCE>
                    <PRENOM>${party.first_name if party else ''}</PRENOM>
                    <PRENOM_USUEL>${party.first_name if party else ''}</PRENOM_USUEL>
                    <VILLE>${address.city if address else ''}</VILLE>
                    <CODE_POSTAL>${address.zip if address else ''}</CODE_POSTAL>
                    <ADRESSE>${address.street if address else ''}</ADRESSE>
                    <DEUXIEME_PRENOM>${party.second_name if party else ''}</DEUXIEME_PRENOM>
                    <TROISIEME_PRENOM>${party.third_name if party else ''}</TROISIEME_PRENOM>
                    <QUATRIEME_PRENOM></QUATRIEME_PRENOM>
                    <DEPARTEMENT_DE_NAISSANCE>${party.birth_zip if party else ''}</DEPARTEMENT_DE_NAISSANCE>
                    <VILLE_DE_NAISSANCE>${party.birth_city if party else ''}</VILLE_DE_NAISSANCE>
                    <PAYS_DE_NAISSANCE>${party.birth_country.name if party else ''}</PAYS_DE_NAISSANCE>
                    <DATE_DE_NAISSANCE>${party.birth_date.strftime('%d/%m/%Y') if party else ''}</DATE_DE_NAISSANCE>
                    <PROFESSION>${covered_element.versions[-1].extra_data['profession_exacte'] if covered_element.versions[-1] and covered_element.versions[-1].extra_data['profession_exacte'] else ''}</PROFESSION>
                    <CATEGORIE_PROFESSIONNELLE>${covered_element.versions[-1].extra_data['categorie_professionnelle'] if covered_element.versions[-1] and covered_element.versions[-1].extra_data['categorie_professionnelle'] else ''}</CATEGORIE_PROFESSIONNELLE>
                    <PROFESSION_SPECIFIQUE>${covered_element.versions[-1].extra_data['profession_specifique'] if covered_element.versions[-1] and covered_element.versions[-1].extra_data['profession_specifique'] else ''}</PROFESSION_SPECIFIQUE>
                    <FUMEUR>${covered_element.versions[-1].extra_data['fumeur'] if covered_element.versions[-1] and covered_element.versions[-1].extra_data['fumeur'] else ''}</FUMEUR>
                    <SITUATION_FAMILIALE>${covered_element.party.extra_data['situation_familiale'] if covered_element.party.extra_data['situation_familiale'] else ''}</SITUATION_FAMILIALE>
                </PERSONNE_A_ASSURER>
            </py:for>
            </PERSONNES_A_ASSURER>
            
            <py:if test="subscriber.is_person">
            <ADHERENT>
                <NOM_ADH>${subscriber.name}</NOM_ADH>
                <PRENOM_ADH>${subscriber.first_name}</PRENOM_ADH>
                <ADRESSE_ADH>${subscriber_address.street if subscriber_address else ''}</ADRESSE_ADH>
                <CODE_POSTAL_ADH>${subscriber_address.zip if subscriber_address else ''}</CODE_POSTAL_ADH>
                <VILLE_ADH>${subscriber_address.city if subscriber_address else ''}</VILLE_ADH>
                <PAYS_ADH>${subscriber_address.country.name if subscriber_address and subscriber_address.country else ''}</PAYS_ADH>
            </ADHERENT>
            </py:if>
            <py:if test="not subscriber.is_person">
            <ADHERENT_SCI>
                <RAISON_SOCIALE>${subscriber.name}</RAISON_SOCIALE>
                <SIREN>${subscriber.siren}</SIREN>
                <ADRESSE_SCI>${subscriber_address.street if subscriber_address else ''}</ADRESSE_SCI>
                <CODE_POSTAL_ADH>${subscriber_address.zip if subscriber_address else ''}</CODE_POSTAL_ADH>
                <VILLE_ADH>${subscriber_address.city if subscriber_address else ''}</VILLE_ADH>
                <PAYS_ADH>${subscriber_address.country.name if subscriber_address and subscriber_address.country else ''}</PAYS_ADH>
            </ADHERENT_SCI>
            </py:if>

            <py:for each="loan in loans">
            <?python
                lender = loan.lender
                lender_address = None
                if loan.lender_address:
                    lender_address = loan.lender_address
                elif lender.main_address:
                    lender_address = lender.main_address
                elif party_lender.addresses:
                    lender_address = lender.addresses[0]
            ?>
            <ORGANISME_PRETEUR>
                <DENOMINATION_PRETEUR>${lender.name if lender else ''}</DENOMINATION_PRETEUR>
                <AGENCE>${lender_address.bank_agency.name if lender_address and lender_address.bank_agency else ''}</AGENCE>
                <ADRESSE_PRETEUR>${lender_address.street if lender_address else ''} ${lender_address.zip if lender_address else ''} ${lender_address.city if lender_address else ''}</ADRESSE_PRETEUR> <!--Renseigner l'adresse au complet pour le prêteur-->
            </ORGANISME_PRETEUR>
            </py:for>

            <CARACTERISTIQUES_DU_FINANCEMENT>
            <py:for each="loan in loans">
                <CARACTERISTIQUE_DU_FINANCEMENT>
                    <NUMERO_DU_PRET>${loan.order}</NUMERO_DU_PRET><!--number?-->
                    <DATE_EFFET_PRET>${loan.funds_release_date}</DATE_EFFET_PRET><!-- Date d'effet du prêt -->
                    <MONTANT>${loan.amount} ${loan.currency_symbol}</MONTANT>
                    <TYPE>${loan.kind_string}</TYPE> <!-- Type de prêt -->
                    <TAUX>${loan.rate}</TAUX>
                    <OBJET_DU_PRET>${loan.extra_data['objet_du_pret'] if loan.extra_data and 'object_du_pret' in loan.extra_data else ''}</OBJET_DU_PRET>
                    <DUREE>${loan.duration}</DUREE>
                    <DONT_DIFFERE>${loan.deferral_duration} ${loan.duration_unit}</DONT_DIFFERE>
                    <MONTANT_ECHEANCES_LOYERS>2299,45</MONTANT_ECHEANCES_LOYERS>
                    <PERIODICITE_ECHEANCE py:if="loan.payment_frequency=='month'">Mensuelle</PERIODICITE_ECHEANCE>
                    <PERIODICITE_ECHEANCE py:if="loan.payment_frequency=='quarter'">Trimestrielle</PERIODICITE_ECHEANCE>
                    <PERIODICITE_ECHEANCE py:if="loan.payment_frequency=='half_year'">Semestrielle</PERIODICITE_ECHEANCE>
                    <PERIODICITE_ECHEANCE py:if="loan.payment_frequency=='year'">Annuelle</PERIODICITE_ECHEANCE>
                </CARACTERISTIQUE_DU_FINANCEMENT>
            </py:for>
            </CARACTERISTIQUES_DU_FINANCEMENT>
        
            <!--<GARANTIES> -->
                <!--<DATE_DE_CESSATIONS_DES_GARANTIES>01/01/2040</DATE_DE_CESSATIONS_DES_GARANTIES>-->
                <!--<PERIODICITE_DES_COTISATIONS>Mensuelle</PERIODICITE_DES_COTISATIONS>-->
                <!--<PERIODICITE_DES_ECHEANCES>Mensuelle</PERIODICITE_DES_ECHEANCES> [> Concerne les echances de paiement de la prime de l'assurance <]-->
                <!--<OPTIONS_SERENITE>Serenité +</OPTIONS_SERENITE> [> Remplir avec Serenité, Sérénité + ou laisser vide en fonction <]-->
                <!--<OPTIONS_SPORT>Sport +</OPTIONS_SPORT> -->
                <!--<DETAIL_DES_CONDITIONS>0</DETAIL_DES_CONDITIONS> [> 1 si suprime ou exclusion, 0 sinon <]-->
            <!--</GARANTIES>-->
        
            <TABLEAU_DES_GARANTIES><!--Ne rien renvoyer si la garantie n'est pas selectionnée -->
            <py:for each="option in options">
                <GARANTIE>
                    <DC py:if="option.coverage.insurance_kind=='death'">Décès (DC)</DC>
                    <PTIA py:if="option.coverage.insurance_kind=='total_autonomy_loss'">Perte Totale et Irréversile d'Autonomie (PTIA)</PTIA>
                    <IPP py:if="option.coverage.insurance_kind=='partial_disability'">Invalidité Permanente Partielle (IPP)</IPP>
                    <IPT py:if="option.coverage.insurance_kind=='total_disability'">Invalidité Permanente Totale(IPT)</IPT>
                    <ITT py:if="option.coverage.insurance_kind=='temporary_disability'">Incapcité Temporaire Totale de Travail (ITT)</ITT>
                    <OBS py:if="option.coverage.insurance_kind=='funeral_capital'">Obsèques (OBS)</OBS>
                    <REDU py:if="option.coverage.insurance_kind=='education_annuities'">Rente Education (REDU)</REDU>
                    <RCON py:if="option.coverage.insurance_kind=='joint_annuities'">Rente Conjoint (RCON)</RCON>
                </GARANTIE>
                </py:for>
                <py:for each="share in shares">
                <?python
                    coverage = share.option.coverage
                ?>
                <PRET_QUOTITIE>
                    <QUOTITE_DC py:if="coverage.insurance_kind=='death'">${share.loan.order} ${share.share*100}%</QUOTITE_DC>
                    <QUOTITE_PTIA py:if="coverage.insurance_kind=='total_autonomy_loss'">${share.loan.order} ${share.share*100}%</QUOTITE_PTIA>
                    <QUOTITE_IPP py:if="coverage.insurance_kind=='partial_disability'">${share.loan.order} ${share.share*100}%</QUOTITE_IPP>
                    <QUOTITE_IPT py:if="coverage.insurance_kind=='total_disability'">${share.loan.order} ${share.share*100}%</QUOTITE_IPT>
                    <QUOTITE_ITT py:if="coverage.insurance_kind=='temporary_disability'">${share.loan.order} ${share.share*100}%</QUOTITE_ITT>
                </PRET_QUOTITIE>
            </py:for>
            </TABLEAU_DES_GARANTIES>

            <DETAILS_DES_GARANTIES> <!-- Ne pas renvoyer de boucle si la garantie n'est pas selectionnée -->
                <py:for each="share in shares">
                <DETAIL_DE_GARANTIE>
                    <GARANTIE py:if="share.option.coverage.insurance_kind=='death'">Décès (DC)</GARANTIE>
                    <GARANTIE py:if="share.option.coverage.insurance_kind=='total_autonomy_loss'">Perte Totale et Irréversile d'Autonomie (PTIA)</GARANTIE>
                    <GARANTIE py:if="share.option.coverage.insurance_kind=='partial_disability'">Invalidité Permanente Partielle (IPP)</GARANTIE>
                    <GARANTIE py:if="share.option.coverage.insurance_kind=='total_disability'">Invalidité Permanente Totale(IPT)</GARANTIE>
                    <GARANTIE py:if="share.option.coverage.insurance_kind=='temporary_disability'">Incapcité Temporaire Totale de Travail (ITT)</GARANTIE>
                    <DATE_DE_CESSATIONS_DES_GARANTIES>${share.option.end_date.strftime('%d/%m/%Y')}</DATE_DE_CESSATIONS_DES_GARANTIES>
                </DETAIL_DE_GARANTIE>
                </py:for>
            </DETAILS_DES_GARANTIES>

            <ECHEANCIERS_DES_COTISATIONS>
                <py:for each="result in results">
                <ECHEANCIER_DES_COTISATIONS>
                    <POUR_L_ANNEE_COMMENCANT_LE>${result['current_premium_start'].strftime('%d/%m/%Y')}</POUR_L_ANNEE_COMMENCANT_LE>
                    <py:for each="loan in loans">
                    <CAPITAL_RESTANT_DU>${loan.get_outstanding_loan_balance(at_date=max(result['current_premium_start'], loan.funds_release_date))*([x.share for x in loan.current_loan_shares if x.option.coverage.insurance_kind in (dc_ptia + ipp_ipt_itt)] or [loan.current_loan_shares[0].share])[0]}</CAPITAL_RESTANT_DU>
                    </py:for>
                    <COTISATION_ANNUELLE_DC_PTIA>${result['amount_dc_ptia']}</COTISATION_ANNUELLE_DC_PTIA>
                    <COTISATION_ANNUELLE_IPP_IPT_ITT>${result['amount_ipp_ipt_itt']}</COTISATION_ANNUELLE_IPP_IPT_ITT>
                    <TOTAL_COTISATION_ANNUELLE>${result['amount_year']}</TOTAL_COTISATION_ANNUELLE>
                    <DONT_OPTIONS>${result['optional_amount']}</DONT_OPTIONS>
                    <COTISATION_MENSUELLE_MOYENNE>${result['amount_month']}</COTISATION_MENSUELLE_MOYENNE>
                </ECHEANCIER_DES_COTISATIONS>
                </py:for>
            </ECHEANCIERS_DES_COTISATIONS>
            <ECHEANCIER_DE_COTISATION_UNIQUE>
                <PERIODICITE_DES_COTISATIONS py:if="contract.billing_information.billing_mode.frequency=='monthly'">Mensuelle</PERIODICITE_DES_COTISATIONS>
                <PERIODICITE_DES_COTISATIONS py:if="contract.billing_information.billing_mode.frequency=='quarterly'">Trimestrielle</PERIODICITE_DES_COTISATIONS>
                <PERIODICITE_DES_COTISATIONS py:if="contract.billing_information.billing_mode.frequency=='half_yearly'">Semestrielle</PERIODICITE_DES_COTISATIONS>
                <PERIODICITE_DES_COTISATIONS py:if="contract.billing_information.billing_mode.frequency=='yearly'">Annuelle</PERIODICITE_DES_COTISATIONS>
                <DATE_DE_L_ECHEANCE_DE_LA_PREMIERE_COTISATION>${premiums[0]['start']}</DATE_DE_L_ECHEANCE_DE_LA_PREMIERE_COTISATION>
                <TOTAL_DES_COTISATIONS_DC_PTIA>${total_amount_dc_ptia}</TOTAL_DES_COTISATIONS_DC_PTIA>
                <TOTAL_DES_COTISATIONS_IPP_IPT_ITT>${total_amount_ipp_ipt_itt}</TOTAL_DES_COTISATIONS_IPP_IPT_ITT>
                <TOTAL_DES_COTISATIONS_ANNUELLE>${total_amount_years}</TOTAL_DES_COTISATIONS_ANNUELLE>
                <TOTAL_DES_COTISATIONS_DONT_OPTIONS>${total_amount_optionals}</TOTAL_DES_COTISATIONS_DONT_OPTIONS>
                <TOTAL_DES_COTISATIONS_MENSUELLE_MOYENNE>${total_amount_month}</TOTAL_DES_COTISATIONS_MENSUELLE_MOYENNE>
                <FRAIS_D_ADHESION_ET_FRAIS_DE_DOSSIER>${total_amount_fee}</FRAIS_D_ADHESION_ET_FRAIS_DE_DOSSIER>
                <TOTAL_GENERAL>${total_general}</TOTAL_GENERAL>
                <TAUX_MOYEN_ANNUEL>0.9637</TAUX_MOYEN_ANNUEL>
                <TAEA>0.5745</TAEA>
                <!--???<COTISATON_MENSUELLE>1675</COTISATON_MENSUELLE>-->
            </ECHEANCIER_DE_COTISATION_UNIQUE>
        </DOCUMENT>
    </ROOT>
</py:for>
</FLUX>
