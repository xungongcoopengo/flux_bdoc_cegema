<?xml version="1.0" encoding="UTF-8"?>
<FLUX xmlns:py="http://genshi.edgewall.org/">
<?python
    import datetime
    from trytond.config import config
    from trytond.pool import Pool
    from trytond.server_context import ServerContext
    env = config.get('bdoc', 'env_name')
    code = Pool().get('report.template')(id=data['doc_template'][0])
    is_batch = 'BATCH' if ServerContext().get('from_batch', None) else 'WEB'
?>
<py:for each="object in objects">
    <?python
        months_in_french = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']
        if object.__class__.__name__ == 'account.payment.merged':
            merged_payments = object
            contracts = set(p.contract for p in object.payments if p.contract)
            party = object.party if object.party else None
            payments = object.payments if object.payments else None
        if object.__class__.__name__ == 'account.dunning':
            dunning = object
            contract = dunning.contract
            party = dunning.party
            if party.main_address:
                party_address = party.main_address
            elif party.addresses:
                party_address = party.addresses[0]
            loans = contract.used_loans
            lender = loans[0].lender if loans else None
            lender_address = None
            if lender:
                if lender.main_address:
                    lender_address = lender.main_address
                elif lender.addresses:
                    lender_address = lender.addresses[0]
            covered_element = contract.covered_elements[0] if contract.covered_elements else None
            assurer_address = None
            if covered_element:
                if covered_element.party.main_address:
                    assurer_address = covered_element.party.main_address
                elif covered_element.party.addresses:
                    assurer_address = assurer.party.addresses[0]
            invoices = dunning.contract.due_invoices if dunning.contract and dunning.contract.due_invoices else None
            total_unpaid_amount = 0 
            for invoice in invoices:
                total_unpaid_amount += invoice.total_amount
    ?>
    <ROOT>
        <DOCUMENT>
            <TECHDATA>
                <MODELE>TEST</MODELE>
                <STATUT_DOCUMENT>TEST</STATUT_DOCUMENT>
                <LISTE_CONTRATS>TEST</LISTE_CONTRATS>
                <NUM_CONTRAT>TEST</NUM_CONTRAT>
                <PERIMETRE>TEST</PERIMETRE>
                <STATUT_CONTRAT>TEST</STATUT_CONTRAT>
                <DATE_EFFET_CONTRAT>TEST</DATE_EFFET_CONTRAT>
                <LISTE_ADHERENT>TEST</LISTE_ADHERENT>
                <NUM_ADHERENT>TEST</NUM_ADHERENT>
                <RAISON_SOCIALE_ADHERENT>TEST</RAISON_SOCIALE_ADHERENT>
                <NOM_ADHERENT>TEST</NOM_ADHERENT>
                <PRENOM_ADHERENT>TEST</PRENOM_ADHERENT>
                <DATE_NAISSANCE_ADHERENT>TEST</DATE_NAISSANCE_ADHERENT>
                <LISTE_ASSURES>TEST</LISTE_ASSURES>
                <NUM_ASSURE>TEST</NUM_ASSURE>
                <NOM_ASSURE>TEST</NOM_ASSURE>
                <PRENOM_ASSURE>TEST</PRENOM_ASSURE>
                <DATE_NAISSANCE_ASSURE>TEST</DATE_NAISSANCE_ASSURE>
                <LISTE_APPORTEUR>TEST</LISTE_APPORTEUR>
                <NUM_APPORTEUR>TEST</NUM_APPORTEUR>
                <RAISON_SOCIALE_APPORTEUR>TEST</RAISON_SOCIALE_APPORTEUR>
                <NOM_CONTACT_APPORTEUR>TEST</NOM_CONTACT_APPORTEUR>
                <PRENOM_CONTACT_APPORTEUR>TEST</PRENOM_CONTACT_APPORTEUR>
                <NUM_PLI>TEST</NUM_PLI>
                <ORIGINE>TEST</ORIGINE>
                <GARANTIES>TEST</GARANTIES>
                <NUM_ACTE_GESTION>TEST</NUM_ACTE_GESTION>
                <DATE_NUMERISATION>TEST</DATE_NUMERISATION>
                <DATE_ENVOI>TEST</DATE_ENVOI>
                <OBJET_DISTRIBUTION>TEST</OBJET_DISTRIBUTION>
                <NOM_EXPEDITEUR>TEST</NOM_EXPEDITEUR>
                <PRENOM_EXPEDITEUR>TEST</PRENOM_EXPEDITEUR>
                <EMAIL_EXPEDITEUR>TEST</EMAIL_EXPEDITEUR>
                <NOM_DESTINATAIRE_PRINCIPAL>TEST</NOM_DESTINATAIRE_PRINCIPAL>
                <PRENOM_DESTINATAIRE_PRINCIPAL>TEST</PRENOM_DESTINATAIRE_PRINCIPAL>
                <EMAIL_DESTINATAIRE_PRINCIPAL>TEST</EMAIL_DESTINATAIRE_PRINCIPAL>
                <LISTE_DESTINATAIRE_COPIE>TEST</LISTE_DESTINATAIRE_COPIE>
                <NOM_DESTINATAIRE_COPIE>TEST</NOM_DESTINATAIRE_COPIE>
                <PRENOM_DESTINATAIRE_COPIE>TEST</PRENOM_DESTINATAIRE_COPIE>
                <EMAIL_DESTINATAIRE_COPIE>TEST</EMAIL_DESTINATAIRE_COPIE>
                <PARTENAIRE_TPA>TEST</PARTENAIRE_TPA>
                <NIVEAU_CONFIDENTIALITE>TEST</NIVEAU_CONFIDENTIALITE>
                <TYPE_ACTE_GESTION_ASSOCIE>TEST</TYPE_ACTE_GESTION_ASSOCIE>
                <LISTE_PRODUIT>TEST</LISTE_PRODUIT>
                <NOM_PRODUIT>TEST</NOM_PRODUIT>
                <MONTANTS_GARANTIES>TEST</MONTANTS_GARANTIES>
                <DOCUMENT_ENTRANT_SORTANT>TEST</DOCUMENT_ENTRANT_SORTANT>
                <RESEAU_DISTRIBUTION>TEST</RESEAU_DISTRIBUTION>
                <PRIORITE>TEST</PRIORITE>
                <DATE_RECEPTION>TEST</DATE_RECEPTION>
                <COURRIER_AR>TEST</COURRIER_AR>
                <VIP>TEST</VIP>
                <ETAT_DOSSIER>TEST</ETAT_DOSSIER>
                <MOTIF>TEST</MOTIF>
                <SOUS_MOTIF>TEST</SOUS_MOTIF>
                <ID_TYPE_DOC_COOG_ATTENDU>TEST</ID_TYPE_DOC_COOG_ATTENDU>
                <TYPE_DOC_COOG_ATTENDU>TEST</TYPE_DOC_COOG_ATTENDU>
                <STATUT_TYPE_DOC_COOG_ATTENDU>TEST</STATUT_TYPE_DOC_COOG_ATTENDU>
                <DATERECEPTION_TYPE_DOC_COOG_ATTENDU>TEST</DATERECEPTION_TYPE_DOC_COOG_ATTENDU>
                <TYPE_RENS_COMPLEMENTAIRE>TEST</TYPE_RENS_COMPLEMENTAIRE>
                <AFFICHAGE_COURTIER>TEST</AFFICHAGE_COURTIER>
                <AFFICHAGE_ASSURE>TEST</AFFICHAGE_ASSURE>
                <AFFICHAGE_GESTION>TEST</AFFICHAGE_GESTION>
                <TYPE_QUESTIONNAIRE>TEST</TYPE_QUESTIONNAIRE>
                <SIGNE_ELECTRONIQUEMENT>TEST</SIGNE_ELECTRONIQUEMENT>
                <ORIGINAL>TEST</ORIGINAL>
                <STREAM>TEST</STREAM>
                <!--Start elements not in EMPRUNTEUR_SPECIFICATION_FLOT-->
                <SOCIETE_CODE>A</SOCIETE_CODE>
                <CODE_LOGO>A</CODE_LOGO>
                <PAPIER_CODE>0</PAPIER_CODE>
                <PREIMPRIME>O</PREIMPRIME>
                <COM_ADH_EMAIL>O</COM_ADH_EMAIL>
                <EMAIL_ADH_TO>${party.email}</EMAIL_ADH_TO>
                <EMAIL_ADH_FROM>moncontratsante@cegema.com</EMAIL_ADH_FROM>
                <EMAIL_ADH_SUBJECT>Swisslife - Devis assurance emprunteur</EMAIL_ADH_SUBJECT>
                <!--End elements not in EMPRUNTEUR_SPECIFICATION_FLOT-->
            </TECHDATA>
            <QR_CODE>
                <TYPE_DOCUMENT></TYPE_DOCUMENT>
                <NUM_CONTRAT></NUM_CONTRAT>
                <NUM_FORMALITE></NUM_FORMALITE>
            </QR_CODE>
            <HEADER>
                <N_ADHESION>${party.get_identifier_value('number_adherent', party.code)}</N_ADHESION>
                <CIVILITE_ASSURE>${covered_element.party.long_gender_string}</CIVILITE_ASSURE> <!-- Renseigner "Mme" pour madame et "M" pour monsieur  -->
                <NOM_ASSURE>${covered_element.party.name}</NOM_ASSURE>
                <PRENOM_ASSURE>${covered_element.party.first_name}</PRENOM_ASSURE>
                <ADRESSE_ASSURE>${assurer_address.street if assurer_address else ''}</ADRESSE_ASSURE>
                <CODE_POSTAL_ASSURE>${assurer_address.zip if assurer_address else ''}</CODE_POSTAL_ASSURE>
                <VILLE_ASSURE>${assurer_address.city if assurer_address else ''}</VILLE_ASSURE>
                <CIVILITE_ADH>${party.long_gender_string}</CIVILITE_ADH> <!-- Renseigner "Mme" pour madame et "M" pour monsieur -->
                <NOM_ADH>${party.name}</NOM_ADH>
                <PRENOM_ADH>${party.first_name}</PRENOM_ADH>
                <ADRESSE_ADH>${party_address.street if party_address else ''}</ADRESSE_ADH>
                <CODE_POSTAL_ADH>${party_address.zip if party_address else ''}</CODE_POSTAL_ADH>
                <VILLE_ADH>${party_address.city if party_address else ''}</VILLE_ADH>
                <NOM_PRETEUR>${lender.name if lender else ''}</NOM_PRETEUR>
                <ADRESSE_PRETEUR>${lender_address.street if lender_address else ''}</ADRESSE_PRETEUR>
                <CODE_POSTAL_PRETEUR>${lender_address.zip if lender_address else ''}</CODE_POSTAL_PRETEUR>
                <VILLE_PRETEUR>${lender_address.city if lender_address else ''}</VILLE_PRETEUR>
                <VILLE_ETABLISSEMENT>${lender_address.city if lender_address else ''}</VILLE_ETABLISSEMENT> <!-- Renseigner la ville de l'assurance   -->
                <DATE_DU_JOUR>${Today.strftime('%d/%m/%Y')}</DATE_DU_JOUR> <!-- Renseigner la date du jour   -->
                <N_DOSSIER>contract.contract_number</N_DOSSIER>
                <SITE_CLIENT>www.slade-adhérent.com</SITE_CLIENT> <!-- Renseigner temporairement "www.slade-adhérent.com"  -->
                <NOM_PRODUIT>SwissLife Excelence Emprunteur</NOM_PRODUIT> <!-- Toujours mettre "SwissLife Excelence Emprunteur" pour l'emprunteur  -->
                <IDENTIFIANT>Test</IDENTIFIANT>
                <TELEPHONE>0473938383</TELEPHONE>
            </HEADER>

            <!--<py:if test="merged_payments">-->
            <!--<BODY>-->
                <!--<DATE_ECHEANCE_REFUS>10/04/2020</DATE_ECHEANCE_REFUS> [>  <]-->
                <!--<MOTIF_REFUS_BANQUE>payments[0].reject_description</MOTIF_REFUS_BANQUE> [>  <]-->
                <!--<NB_MOIS_A_REGLER>${len(payments)}</NB_MOIS_A_REGLER> [>  <]-->
                <!--<MONTANT_ECHEANCE_A_REGLER>${payments[0].amount}</MONTANT_ECHEANCE_A_REGLER> [>  <]-->
                <!--<MONTANT_TOTAL_IMPAYE>${merged_payments.amount}</MONTANT_TOTAL_IMPAYE> [>  <]-->
                <!--<FRAIS_REJET>27</FRAIS_REJET> [>  <]-->
                <!--<DATE_BUTOIR>10/04/2020</DATE_BUTOIR> [>  <]-->
                <!--<TOTAL_A_REGLER>4527</TOTAL_A_REGLER> [> "FRAIS_REJET" + "MONTANT_TOTAL_IMPAYE" <]-->
                <!--<DATE_PRELEVEMENT>M</DATE_PRELEVEMENT> [>   <]-->
                <!--<DATE_BUTOIR_REGLEMENT>M</DATE_BUTOIR_REGLEMENT> [>  <]-->
                <!--<SERVICE>M</SERVICE> [> Renseigner "Souscription" ou "Modification" ou "Sinistre" <]-->
                <!--<DATE_LETTRE_IMPAYE_1>05/04/2020</DATE_LETTRE_IMPAYE_1>-->
                <!--<DATE_SUSPENSION_GARANTIE>10/05/2020</DATE_SUSPENSION_GARANTIE>-->
            <!--</BODY>-->

            <!--<ECHEANCES_DES_IMPAYES>-->
            <!--<py:for each="payment in payments">-->
                <!--<ECHEANCE_IMPAYE_IT>-->
                    <!--<ECHEANCE_IMPAYE>${months_in_french[payemnt.line.move.invoice.start.month - 1]} ${payment.line.move.invoice.start.year}</ECHEANCE_IMPAYE>-->
                    <!--<MONTANT_ECHEANCE_IMPAYE>payment.amount</MONTANT_ECHEANCE_IMPAYE>-->
                <!--</ECHEANCE_IMPAYE_IT>-->
            <!--</py:for>-->
            <!--</ECHEANCES_DES_IMPAYES>-->
            <!--</py:if>-->

            <py:if test="dunning"><!-- If letters come from account.dunning -->
            <BODY>
                <DATE_ECHEANCE_REFUS>${invoices[0].planned_payment_date.strftime('%d/%m/%Y') if invoices else ''}</DATE_ECHEANCE_REFUS> <!--  -->
                <MOTIF_REFUS_BANQUE>${invoices[0].payments[0].reject_description if invoices and invoices[0].payments else ''}</MOTIF_REFUS_BANQUE> <!--  -->
                <NB_MOIS_A_REGLER>${len(invoices)}</NB_MOIS_A_REGLER> <!--  -->
                <MONTANT_ECHEANCE_A_REGLER>${total_unpaid_amount}</MONTANT_ECHEANCE_A_REGLER> <!--  -->
                <MONTANT_TOTAL_IMPAYE>${total_unpaid_amount}</MONTANT_TOTAL_IMPAYE> <!--  -->
                <FRAIS_REJET>${invoices[0].payments[0].reject_fee_amount if invoices and invoices[0].payments else ''}</FRAIS_REJET> <!--  -->
                <DATE_BUTOIR>10/04/2020</DATE_BUTOIR> <!--  -->
                <TOTAL_A_REGLER>4527</TOTAL_A_REGLER> <!-- "FRAIS_REJET" + "MONTANT_TOTAL_IMPAYE" -->
                <DATE_PRELEVEMENT>M</DATE_PRELEVEMENT> <!--   -->
                <DATE_BUTOIR_REGLEMENT>M</DATE_BUTOIR_REGLEMENT> <!--  -->
                <SERVICE>M</SERVICE> <!-- Renseigner "Souscription" ou "Modification" ou "Sinistre" -->
                <DATE_LETTRE_IMPAYE_1>05/04/2020</DATE_LETTRE_IMPAYE_1>
                <DATE_SUSPENSION_GARANTIE>${contract.actives_rights_suspensions[0].start_date if contract.actives_rights_suspensions else ''}</DATE_SUSPENSION_GARANTIE>
            </BODY>

            <ECHEANCES_DES_IMPAYES>
            <py:for each="quittance in invoices">
                <ECHEANCE_IMPAYE_IT>
                    <ECHEANCE_IMPAYE>${months_in_french[quittance.planned_payment_date.month - 1]} ${quittance.planned_payment_date.year}</ECHEANCE_IMPAYE>
                    <MONTANT_ECHEANCE_IMPAYE>quittance.invoice.total_amount</MONTANT_ECHEANCE_IMPAYE>
                </ECHEANCE_IMPAYE_IT>
            </py:for>
            </ECHEANCES_DES_IMPAYES>
            </py:if>
        </DOCUMENT>
    </ROOT>
</py:for>
</FLUX>
