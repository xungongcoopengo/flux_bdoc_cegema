<?xml version="1.0" encoding="UTF-8"?>
<?python
    from datetime import datetime, date
    from trytond.pool import Pool
    from trytond.modules.coog_core import coog_date
?>
<ROOT xmlns:py="http://genshi.edgewall.org/">
    <DOCUMENT py:for="dunning in objects">
        <?python
            template = Pool().get('report.template')(id=doc_template[0])
            contract = dunning.contract
            loan = contract.used_loans[0]
            subscriber = contract.subscriber if contract else None
            subscriber_address = subscriber.get_address() if subscriber else None
            covered_element = contract.covered_elements[0] if contract.covered_elements else None
            covered_element_party = covered_element.party if covered_element else None
            covered_element_address = covered_element_party.get_address() if covered_element_party else None
            french_months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']
            to_generate = template and contract and loan and subscriber and covered_element and covered_element_party

            next_periods = contract.get_future_invoices(contract, from_date=dunning.line.maturity_date or date.today())
            next_period = next_periods[1] if next_periods and len(next_periods) > 1 else None
            next_pay_day = french_months[int(next_period['start'].strftime('%m')) - 1] + ' ' + next_period['start'].strftime('%Y') if next_period and next_period.get('start', None) else None
            reject_amount = Decimal(0)
            total_to_pay = next_period.get('total_amount', Decimal(0)) if next_period else Decimal(0)
            all_unpaid = {next_pay_day: total_to_pay} if next_pay_day else {}
            for contract_invoice in contract.due_invoices:
                account_invoice = contract_invoice.invoice
                if account_invoice and account_invoice.lines_to_pay:
                    for line in account_invoice.lines_to_pay:
                        if line.journal and line.journal.code in ['frais_de_rappel', 'RAPPEL']:
                            reject_amount += line.amount
                        else:
                            total_to_pay += line.amount
                        unpaid_date = french_months[int(line.maturity_date.strftime('%m')) - 1] + ' ' + line.maturity_date.strftime('%Y')
                        all_unpaid[unpaid_date] = line.amount
        ?>
        <TECHDATA py:if="to_generate">
            <MODELE>${template.code}</MODELE>
            <NUM_ASSURE>${covered_element_party.code}</NUM_ASSURE>
            <NOM_ASSURE>${covered_element_party.name}</NOM_ASSURE>
            <PRENOM_ASSURE>${covered_element_party.first_name}</PRENOM_ASSURE>
            <DATE_NAISSANCE_ASSURE>${covered_element_party.birth_date.strftime('%Y-%m-%d')}</DATE_NAISSANCE_ASSURE>
            <PRENOM_CONTACT_APPORTEUR></PRENOM_CONTACT_APPORTEUR>
            <NUM_PLI></NUM_PLI>
            <ORIGINE>BDOC</ORIGINE>
            <MONTANTS_GARANTIES></MONTANTS_GARANTIES>
            <DOCUMENT_ENTRANT_SORTANT>S</DOCUMENT_ENTRANT_SORTANT>
            <MOTIF>Document sortant</MOTIF>
            <SOUS_MOTIF>Archives</SOUS_MOTIF>
            <SIGNE_ELECTRONIQUEMENT>O</SIGNE_ELECTRONIQUEMENT>
            <GED>O</GED>
            <GED_ONBASE>O</GED_ONBASE>
            <GED_NOM_FICHIER>IMPAYE_${datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</GED_NOM_FICHIER>
            <IDENTIFIANT_DOCUMENT_UNIQUE></IDENTIFIANT_DOCUMENT_UNIQUE>
            <PERIMETRE>EMP</PERIMETRE>
            <TYPE_DOCUMENT>Impayé</TYPE_DOCUMENT>
            <NUM_ADHERENT>${subscriber.code}</NUM_ADHERENT>
            <RAISON_SOCIALE_ADHERENT>${subscriber.name if not subscriber.is_person else ''}</RAISON_SOCIALE_ADHERENT>
            <NOM_ADHERENT>${subscriber.name if subscriber.is_person else ''}</NOM_ADHERENT>
            <PRENOM_ADHERENT>${subscriber.first_name if subscriber.is_person else ''}</PRENOM_ADHERENT>
            <DATE_RECEPTION>${datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</DATE_RECEPTION>
            <NIVEAU_CONFIDENTIALITE>N/A</NIVEAU_CONFIDENTIALITE>
        </TECHDATA>
        <QR_CODE py:if="to_generate">
            <TYPE_DOCUMENT>Impayé</TYPE_DOCUMENT>
            <NUM_CONTRAT>${contract.id}</NUM_CONTRAT>
        </QR_CODE>
        <HEADER py:if="to_generate">
            <CODE_REJET_PRELEVEMENT_ISO></CODE_REJET_PRELEVEMENT_ISO>
            <N_ADHESION>${contract.contract_number or contract.quote_number}</N_ADHESION>
            <CIVILITE_ADH>${subscriber.gender_string}</CIVILITE_ADH>
            <NOM_ADH>${subscriber.name}</NOM_ADH>
            <PRENOM_ADH>${subscriber.first_name}</PRENOM_ADH>
            <ADRESSE_ADH>${subscriber_address.street if subscriber_address else ''}</ADRESSE_ADH>
            <CODE_POSTAL_ADH>${subscriber_address.zip if subscriber_address else ''}</CODE_POSTAL_ADH>
            <VILLE_ADH>${subscriber_address.city if subscriber_address else ''}</VILLE_ADH>
            <PAYS_ADH>${subscriber_address.country.name if subscriber_address and subscriber_address.country else ''}</PAYS_ADH>
            <CIVILITE_ASSURE>${covered_element_party.gender_string}</CIVILITE_ASSURE>
            <NOM_ASSURE>${covered_element_party.name}</NOM_ASSURE>
            <PRENOM_ASSURE>${covered_element_party.first_name}</PRENOM_ASSURE>
            <ADRESSE_ASSURE>${covered_element_address.street if covered_element_address else ''}</ADRESSE_ASSURE>
            <CODE_POSTAL_ASSURE>${covered_element_address.zip if covered_element_address else ''}</CODE_POSTAL_ASSURE>
            <VILLE_ASSURE>${covered_element_address.city if covered_element_address else ''}</VILLE_ASSURE>
            <NOM_PRETEUR>${loan.lender.name if loan.lender else ''}</NOM_PRETEUR>
            <ADRESSE_PRETEUR>${loan.lender_address.street if loan.lender_address else ''}</ADRESSE_PRETEUR>
            <CODE_POSTAL_PRETEUR>${loan.lender_address.zip if loan.lender_address else ''}</CODE_POSTAL_PRETEUR>
            <VILLE_PRETEUR>${loan.lender_address.city if loan.lender_address else ''}</VILLE_PRETEUR>
            <VILLE_ETABLISSEMENT>Villeneuve-Loubet</VILLE_ETABLISSEMENT>
            <DATE_DU_JOUR>${datetime.now().strftime('%d/%m/%Y')}</DATE_DU_JOUR>
            <N_DOSSIER></N_DOSSIER>
            <SITE_CLIENT>www.slade-adhérent.com</SITE_CLIENT>
            <NOM_PRODUIT>SwissLife Excelence Emprunteur</NOM_PRODUIT>
            <IDENTIFIANT></IDENTIFIANT>
            <TELEPHONE>0492020850</TELEPHONE>
        </HEADER>
        <BODY py:if="to_generate">
            <DATE_ECHEANCE_REFUS>${dunning.line.maturity_date.strftime('%d/%m/%Y') if dunning.line else ''}</DATE_ECHEANCE_REFUS>
            <MOTIF_REFUS_BANQUE>${dunning.line.description if dunning.line else ''}</MOTIF_REFUS_BANQUE>
            <MONTANT_ECHEANCE_A_REGLER>${next_period['amount'] if next_period else Decimal(0)}</MONTANT_ECHEANCE_A_REGLER>
            <MONTANT_TOTAL_IMPAYE>${total_to_pay}</MONTANT_TOTAL_IMPAYE>
            <FRAIS_REJET>${reject_amount}</FRAIS_REJET>
            <TOTAL_A_REGLER>${reject_amount + total_to_pay}</TOTAL_A_REGLER>
            <DATE_PRELEVEMENT>${coog_date.add_month(dunning.line.maturity_date, 1).strftime('%d/%m/%Y')}</DATE_PRELEVEMENT>
            <DATE_BUTOIR_REGLEMENT>${coog_date.add_day(dunning.line.maturity_date, 18).strftime('%d/%m/%Y')}</DATE_BUTOIR_REGLEMENT>
            <DATE_SUSPENSION_GARANTIE>${coog_date.add_day(dunning.line.maturity_date, 70).strftime('%d/%m/%Y')}</DATE_SUSPENSION_GARANTIE>
            <N_RUM>${dunning.line.sepa_mandate.identification if dunning.line.sepa_mandate else ''}</N_RUM>
            <N_ICS>FR30ZZZ390186</N_ICS>
            <PROCHAINE_ECHEANCE>${next_pay_day}</PROCHAINE_ECHEANCE>
        </BODY>
        <ECHEANCES_DES_IMPAYES py:if="to_generate">
            <ECHEANCE_IMPAYE_IT py:for="key, value in all_unpaid.items()">
                <ECHEANCE_IMPAYE>${key}</ECHEANCE_IMPAYE>
                <MONTANT_ECHEANCE_IMPAYE>${value}</MONTANT_ECHEANCE_IMPAYE>
            </ECHEANCE_IMPAYE_IT>
        </ECHEANCES_DES_IMPAYES>
    </DOCUMENT>
</ROOT> 
